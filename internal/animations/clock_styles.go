package animations

// ClockStyleDigits defines the ASCII representation of digits for different clock styles
// Each style maps characters to their multi-line ASCII representation
var ClockStyleDigits = map[string]map[rune][]string{
	"kompaktblk": {
		'0': {
			"██████╗",
			"██╔══██╗",
			"██║  ██║",
			"██║  ██║",
			"██████╔╝",
			"╚═════╝",
		},
		'1': {
			"██╗",
			"██║",
			"██║",
			"██║",
			"██║",
			"╚═╝",
		},
		'2': {
			"██████╗",
			"╚════██╗",
			" █████╔╝",
			"██╔═══╝",
			"███████╗",
			"╚══════╝",
		},
		'3': {
			"██████╗",
			"╚════██╗",
			" █████╔╝",
			" ╚═══██╗",
			"██████╔╝",
			"╚═════╝",
		},
		'4': {
			"██╗  ██╗",
			"██║  ██║",
			"███████║",
			"╚════██║",
			"     ██║",
			"     ╚═╝",
		},
		'5': {
			"███████╗",
			"██╔════╝",
			"██████╗",
			"╚════██╗",
			"██████╔╝",
			"╚═════╝",
		},
		'6': {
			" ██████╗",
			"██╔════╝",
			"██████╗",
			"██╔═══██╗",
			"╚██████╔╝",
			" ╚═════╝",
		},
		'7': {
			"███████╗",
			"╚════██║",
			"    ██╔╝",
			"   ██╔╝",
			"  ██╔╝",
			"  ╚═╝",
		},
		'8': {
			" █████╗",
			"██╔══██╗",
			"╚█████╔╝",
			"██╔══██╗",
			"╚█████╔╝",
			" ╚════╝",
		},
		'9': {
			" █████╗",
			"██╔══██╗",
			"╚██████║",
			" ╚═══██║",
			" █████╔╝",
			" ╚════╝",
		},
		':': {
			"  ",
			"██",
			"  ",
			"  ",
			"██",
			"  ",
		},
		' ': {
			" ",
			" ",
			" ",
			" ",
			" ",
			" ",
		},
		'A': {
			" █████╗",
			"██╔══██╗",
			"███████║",
			"██╔══██║",
			"██║  ██║",
			"╚═╝  ╚═╝",
		},
		'P': {
			"██████╗",
			"██╔══██╗",
			"██████╔╝",
			"██╔═══╝",
			"██║",
			"╚═╝",
		},
		'M': {
			"███╗   ███╗",
			"████╗ ████║",
			"██╔████╔██║",
			"██║╚██╔╝██║",
			"██║ ╚═╝ ██║",
			"╚═╝     ╚═╝",
		},
	},

	"phmvga": {
		'0': {
			"┌────┐",
			"│    │",
			"│    │",
			"│    │",
			"│    │",
			"└────┘",
		},
		'1': {
			"   ┐",
			"   │",
			"   │",
			"   │",
			"   │",
			"   ┘",
		},
		'2': {
			"┌────┐",
			"     │",
			"┌────┘",
			"│     ",
			"│     ",
			"└────┘",
		},
		'3': {
			"┌────┐",
			"     │",
			" ┌───┘",
			"     │",
			"     │",
			"└────┘",
		},
		'4': {
			"│    │",
			"│    │",
			"└────┤",
			"     │",
			"     │",
			"     └",
		},
		'5': {
			"┌────┐",
			"│     ",
			"└────┐",
			"     │",
			"     │",
			"└────┘",
		},
		'6': {
			"┌────┐",
			"│     ",
			"├────┐",
			"│    │",
			"│    │",
			"└────┘",
		},
		'7': {
			"┌────┐",
			"     │",
			"    │ ",
			"   │  ",
			"  │   ",
			" ┘    ",
		},
		'8': {
			"┌────┐",
			"│    │",
			"├────┤",
			"│    │",
			"│    │",
			"└────┘",
		},
		'9': {
			"┌────┐",
			"│    │",
			"└────┤",
			"     │",
			"     │",
			"└────┘",
		},
		':': {
			"      ",
			"  ██  ",
			"      ",
			"      ",
			"  ██  ",
			"      ",
		},
		' ': {
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
		},
		'A': {
			"  ┌─┐  ",
			"  │ │  ",
			"┌─┼─┼─┐",
			"│ │ │ │",
			"└─┘ └─┘",
			"      ",
		},
		'P': {
			"┌────┐",
			"│    │",
			"├────┘",
			"│     ",
			"│     ",
			"└     ",
		},
		'M': {
			"┌─┬─┬─┐",
			"│ │ │ │",
			"│ │ │ │",
			"└─┘ └─┘",
			"      ",
			"      ",
		},
	},

	"dos_rebel": {
		'0': {
			"▄▄▄▄▄▄",
			"██  ██",
			"██  ██",
			"██  ██",
			"██  ██",
			"▀▀▀▀▀▀",
		},
		'1': {
			"  ██  ",
			"  ██  ",
			"  ██  ",
			"  ██  ",
			"  ██  ",
			"▄▄▄▄▄▄",
		},
		'2': {
			"▄▄▄▄▄▄",
			"     ██",
			"▄▄▄▄▄██",
			"██▄▄▄▄▄",
			"██     ",
			"▀▀▀▀▀▀▀",
		},
		'3': {
			"▄▄▄▄▄▄",
			"     ██",
			" ▄▄▄▄██",
			"     ██",
			"     ██",
			"▀▀▀▀▀▀",
		},
		'4': {
			"██  ██",
			"██  ██",
			"▀▀▀▀██",
			"    ██",
			"    ██",
			"  ▄▄▄▄",
		},
		'5': {
			"▄▄▄▄▄▄▄",
			"██     ",
			"██████▄",
			"     ██",
			"     ██",
			"▀▀▀▀▀▀ ",
		},
		'6': {
			" ▄▄▄▄▄▄",
			"██     ",
			"██████▄",
			"██   ██",
			"██   ██",
			"▀▀▀▀▀▀ ",
		},
		'7': {
			"▄▄▄▄▄▄▄",
			"     ██",
			"    ██ ",
			"   ██  ",
			"  ██   ",
			" ██    ",
		},
		'8': {
			"▄▄▄▄▄▄",
			"██  ██",
			"▀████▀",
			"██  ██",
			"██  ██",
			"▀▀▀▀▀▀",
		},
		'9': {
			"▄▄▄▄▄▄",
			"██  ██",
			"▀▀▀▀██",
			"    ██",
			"    ██",
			"▀▀▀▀▀▀",
		},
		':': {
			"      ",
			"  ██  ",
			"      ",
			"      ",
			"  ██  ",
			"      ",
		},
		' ': {
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
			"      ",
		},
		'A': {
			"  ▄▄  ",
			" ▄▀▀▄ ",
			"▄▀▄▄▀▄",
			"▀▀▄▄▀▀",
			"  ██  ",
			"  ▀▀  ",
		},
		'P': {
			"▄▄▄▄▄▄",
			"██  ██",
			"▀████▀",
			"██    ",
			"██    ",
			"▀▀    ",
		},
		'M': {
			"▄▄  ▄▄",
			"██  ██",
			"██▄▄██",
			"▀▀██▀▀",
			"  ██  ",
			"  ▀▀  ",
		},
	},

	"plain": nil, // Special case - returns nil to indicate plain text rendering
}

// GetClockStyleDigits returns the digit map for a given clock style
// Returns nil for plain style which should be rendered as regular text
func GetClockStyleDigits(style string) map[rune][]string {
	if digits, exists := ClockStyleDigits[style]; exists {
		return digits
	}
	// Default to kompaktblk if style not found
	return ClockStyleDigits["kompaktblk"]
}
